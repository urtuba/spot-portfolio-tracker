@startuml ClassDiagram

class InvestorManager <manager> {
    + updateEmail (investor, newEmail)
    + updatePassword (investor, newPassword)
    + createWallet (investor, walletName)
    + getWallet (investor, walletName)
    + removeWallet (investor, walletName)
}

class PurchaseManager <manager> {
    + getTransactions (wallet)
    + addAsset (wallet, asset, amount, price)
    + removeAsset (wallet, asset, price, savePNL)
    + buyAsset (wallet, asset, amount, price)
    + sellAsset (wallet, asset, amount, price)
}

class Investor <entity>{
    - id: String
    - name: String
    - email: String
    - password: String
    - wallets: [Wallet]
    - favorites: [Asset]
    - pastPNL: Number
    + get totalPNL ()
    + addFavorite (asset)
    + removeFavorite (asset)
}

class Asset <entity> {
    + symbol: String
    + name: String
    + type: String
}

class Balance <entity> {
    - asset: Asset
    - amount: Number
    - boughtAmount: Number
    - avgBuyPrice: Number
    - transactions: [Transaction]
    - value (price)
    + unrealizedPNL (price)
    + totalPNL ()
    + allTransactions ()
}

class Transaction <entity> {
    - id: String
    - time: Date
    - asset: Asset
    - type: Type
    - amount: Number
    - price: Number
    - pnl: Number
}

class Wallet <entity> {
    - id: String
    - name: String
    - balances: [Balance]
    - transactions: [Transactions]
    + value ()
    + pnl ()
    + getBalance (assetId)
}

enum AssetType <enum> {
    COIN
    TOKEN
    CURRENCY
}

enum TransactionType <enum> {
    ADD
    REMOVE
    BUY
    SELL
}

Wallet "n" <-UP-* "1" Investor: owns <
Asset <|-- Balance
Balance "1" o--> "n" Transaction: has >
Wallet "1" o--> "n" Transaction: has >
Wallet "1" o--> "n" Balance: has >
Asset  --> "1" AssetType
Transaction --> "1" TransactionType
Investor "1" --> "n" Asset

InvestorManager "1" --> "n" Investor: manages >
InvestorManager "1" --> "n" Wallet: manages >
PurchaseManager "1" --> "n" Wallet: manages >
PurchaseManager "1" --> "n" Balance: manages >

@enduml